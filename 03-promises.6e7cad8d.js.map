{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBAEN,IAAMC,EAAQC,OAAOP,EAAKQ,SAASC,MAAMC,OACnCC,EAAOJ,OAAOP,EAAKQ,SAASG,KAAKD,OACjCE,EAASL,OAAOP,EAAKQ,SAASI,OAAOF,OACvCG,EAAU,EAERC,EAAKC,aAAY,WACrB,IAmBmBC,EAAUP,EAnBvBQ,EAASX,EAAMK,EAAKE,EAEpBK,EADNL,GAAW,EAGRA,IAAYD,GACbO,cAAcL,IAcGE,EAXDE,EAWWT,EAXDQ,EAYvB,IAAIG,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEL,WAAUP,UAEpBa,EAAO,CAAEN,WAAUP,S,GAEpBA,E,KAnBAiB,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUP,EAAKkB,EAALlB,MACjBX,EAAA8B,OAAOC,QAAQ,qBAAoCC,OAAfd,EAAS,QAAYc,OAANrB,EAAM,OACzDsB,QAAQC,IAAI,uBAAwCF,OAAfd,EAAS,QAAYc,OAANrB,EAAM,M,IAE3DwB,OAAM,SAAAN,G,IAAGX,EAAQW,EAARX,SAAUP,EAAKkB,EAALlB,MAClBX,EAAA8B,OAAOM,QAAQ,oBAAmCJ,OAAfd,EAAS,QAAYc,OAANrB,EAAM,OACxDsB,QAAQC,IAAI,sBAAqCF,OAAfd,EAAS,QAAYc,OAANrB,EAAM,M,MAE3D,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', genPromise);\n\nfunction genPromise(event) {\n  event.preventDefault();\n\n  const delay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n  let counter = 0\n\n  const id = setInterval(() => {\n    const iDelay = delay+step*counter\n    counter += 1\n    const position = counter\n\n    if(counter === amount) {\n      clearInterval(id)\n    }\n    \n        createPromise(position, iDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  },0)\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","delay1","Number","elements","delay","value","step","amount","counter","id","setInterval","position","iDelay","position1","clearInterval","Promise","resolve","reject","setTimeout","Math","random","then","param","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.6e7cad8d.js.map"}